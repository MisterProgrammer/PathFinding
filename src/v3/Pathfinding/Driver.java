package v3.Pathfinding;

public class Driver {

	public static void main(String[] args) {
		PathFindingAlgorithm alg = new PathFindingAlgorithm();
		StopWatch watch = new StopWatch();
		watch.start();
		Grid grid = alg.startAlgorithm(new char[][] {
				{ '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ 'S', '.', '.', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '#', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '#', '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '#', '#', '#', '.', '.', '.', '.', '.', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '#', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '#', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '.', '.', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '#', '#', '#', '#', '#', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', },
				{ '.', '.', '.', '.', '#', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '#', 'F', },

		});

//		Grid grid = alg.startAlgorithm(new char[][] { { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
//				{ '.', '.', '.', '.', '.', '#', '#', '.', '.', '.' },
//				{ '.', '.', '#', '#', '.', '#', '#', '.', '.', '.' },
//				{ '#', '.', '.', '#', '.', '.', '#', '#', '.', '.' },
//				{ '#', '.', '.', '#', '.', '.', '.', '#', '.', '.' },
//				{ '#', '.', '.', '#', '#', '.', '.', '#', '.', '.' },
//				{ '.', '.', '.', '.', '#', '#', '.', '.', '.', '.' },
//				{ '.', '.', '.', '.', '#', '#', '.', '.', '.', '.' },
//				{ '.', '.', '.', '.', '.', '#', '#', '.', 'F', '.' },
//				{ 'S', '.', '.', '.', '.', '.', '#', '.', '.', '.' }, });
//		Grid grid = alg.startAlgorithm(new char[][] {
//				{ 'S', '2', '.', '.', '.', '4', '.', '.', '.', '.' },
//				{ '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '#', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '.', '.', '.', '.', '.', '.', '.', '.', '#', '.' },
//				{ '1', '#', '3', '.', '.', '.', '.', '.', '#', 'F' }, });
		watch.stop();
		watch.getTime();
		grid.printGrid();
	}
}